<<<<<<< HEAD
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
=======
# Python
# Python bytecode
__pycache__/
*.pyc
*.pyd
*.pyo
*.egg-info/
.Python
build/
dist/

# Virtual environment
.venv/
venv/
env/
.direnv/

# Poetry specific
# Poetry usually creates .venv inside the project, but sometimes outside.
# If you run `poetry install` on your host, it might create a .venv folder.
# This ensures it's ignored.
.poetry/

# Testing and linting caches
.pytest_cache/
.mypy_cache/
.ruff_cache/
.coverage
.coverage.*
htmlcov/

# IDEs
.vscode/
.idea/

# Operating System Files
.DS_Store # macOS
Thumbs.db # Windows
ehthumbs.db # Windows
Desktop.ini # Windows

# Environment variables
.env
.env.*
# Specific to your backend .env file location
packages/backend/.env

# Docker
# Ignore Docker build context files that are not needed in the image
# (often handled by .dockerignore, but good to have here too for general repo cleanliness)
# Docker volumes (if they are created as local directories in your repo root)
qdrant_data/
postgres_data/

# Logs
*.log
>>>>>>> f187eb96961b922cade29ab86f3aa0317789a982
